@page "/"

@using DashboardTrilhasEsporte.Domain;
@using DashboardTrilhasEsporte.Data;
@using DashboardTrilhasEsporte.Components.Layout;

@inject SkuMarketplaceManager SkuManager



<PageTitle>Visão Geral</PageTitle>


@if ( resultadosListaCorrente== null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}else{

<MudText Typo="Typo.h6" GutterBottom="true">Aplicar Filros </MudText>
<div style="max-width: 100%;">
<!-- filtrar por Data comissao / Tipo do Evento / Tipo de erro-->
</div>

<MudText Typo="Typo.h6" GutterBottom="true"> Análise estatistica  </MudText>


<MudGrid GutterSize="20px" Class="pa-4">
    <MudItem xs="12" sm="6" md="4">
        <MudCard Elevation="6" Style="border-radius:10px; text-align:center; padding:20px;">
            <MudCardContent Style="display:flex; flex-direction:column; align-items:center;">
                <MudIcon Icon="fas fa-wallet" Size="Size.Large" Style="font-size:40px; color:#4CAF50; margin-bottom:15px;" />
                <MudText Typo="Typo.h5" GutterBottom="true" Style="font-weight:bold; font-size:24px;">
                    @resultadosListaCorrente.somatorioValorFinal.ToString("C")
                </MudText>
                <MudText Typo="Typo.subtitle2" Style="font-size:16px;">
                    Soma do Valor Final
                </MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <MudItem xs="12" sm="6" md="4">
        <MudCard Elevation="6" Style="border-radius:10px; text-align:center; padding:20px;">
            <MudCardContent Style="display:flex; flex-direction:column; align-items:center;">
                <MudIcon Icon="fas fa-list-alt" Size="Size.Large" Style="font-size:40px; color:lightseagreen; margin-bottom:15px;" />
                <MudText Typo="Typo.h5" GutterBottom="true" Style="font-weight:bold; font-size:24px;">
                    @resultadosListaCorrente.quantidadeTotalRegistro
                </MudText>
                <MudText Typo="Typo.subtitle2" Style="font-size:16px;">
                    Quantidade de Registros
                </MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <MudItem xs="12" sm="6" md="4">
        <MudCard Elevation="6" Style="border-radius:10px; text-align:center; padding:20px;">
            <MudCardContent Style="display:flex; flex-direction:column; align-items:center;">
                <MudIcon Icon="fas fa-exclamation-triangle" Size="Size.Large" Style="font-size:40px; color:red; margin-bottom:15px;" />
                
        
                <MudText Typo="Typo.h5" GutterBottom="true" Style="font-weight:bold; font-size:24px;">
                    @resultadosListaCorrente.quantidadeTotalErros
                </MudText>
                <MudText Typo="Typo.subtitle2" Style="font-size:16px;">
                    Quantidade total de Erros
                </MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<div style="max-width: 100%; display: flex; justify-content: center; align-items: center;">
    <DonutChartComponent Data="@data" Labels="@labels" Title="Total de Erros" Width="450px" Height="450px" />
</div>


<MudText Typo="Typo.h6" GutterBottom="true">Lista de Marketplace </MudText>
<!-- filtrar por numeros do Pedido-->

<div style="max-width: 100%; overflow-x: auto;">
    <MudTable Items="resultadosListaCorrente.skuMarketplaceDTOs"
              Hover="true"
              SortLabel="Ordenar por"
              Elevation="0"
              AllowUnsorted="false"
              Bordered="true"
              Striped="true"
              FixedHeader="true">

        <HeaderContent>
            <MudTh Style="min-width: 150px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.skuMarketplaceId">
                   id
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 150px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.numeroPedido">
                    Número Pedido
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 120px;  text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.valorLiquido">
                    Valor Pedido
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 120px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.valorFinal">
                    Valor Final
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 150px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.tipoEventoNormalizado">
                    Tipo Evento
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 140px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.dataEvento">
                    Data do Pedido
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 130px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.porcentagem">
                    Porcentagem
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 130px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.comissao">
                    Comissão
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 140px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.skuMarketplace.dataCiclo">
                    Data do Ciclo
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 200px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDTO" SortBy="x => x.listaErros">
                    Lista de Erros
                </MudTableSortLabel>
            </MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="Número Pedido">@context.skuMarketplace.skuMarketplaceId</MudTd>
            <MudTd DataLabel="Número Pedido">@context.skuMarketplace.numeroPedido</MudTd>
            <MudTd DataLabel="Valor Pedido">@context.skuMarketplace.valorLiquido.ToString("C")</MudTd>
            <MudTd DataLabel="Valor Final">@context.skuMarketplace.valorFinal.ToString("C")</MudTd>
            <MudTd DataLabel="Tipo Evento">@context.skuMarketplace.tipoEventoNormalizado.GetDescription()</MudTd>
            <MudTd DataLabel="Data do Pedido">@context.skuMarketplace.dataEvento?.ToShortDateString()</MudTd>
            <MudTd DataLabel="Porcentagem">@($"{context.skuMarketplace.porcentagem:P}")</MudTd>
            <MudTd DataLabel="Comissão">@context.skuMarketplace.comissao.ToString("C")</MudTd>
            <MudTd DataLabel="Data do Ciclo">@context.skuMarketplace.dataCiclo?.ToShortDateString()</MudTd>
            <MudTd DataLabel="Lista de Erros">
                @if (context.listaErros != null && context.listaErros.Any())
                {
                    <ul style="margin: 0; padding-left: 16px; list-style-type: disc;">
                        @foreach (var erro in context.listaErros)
                        {
                            <li>@erro</li>
                        }
                    </ul>
                }
                else
                {
                    <em>Sem erros</em>
                }
            </MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50 }" />
        </PagerContent>
    </MudTable>
</div>



    
}
@code {
    
    private SkuMarketplaceListResultDTO resultadosListaCorrente;
    private double[] data;
    private string[] labels;

   protected override async Task OnAfterRenderAsync(bool firstRender)
{
    if (firstRender)
    {
        Console.WriteLine($"[DEBUG] OnAfterRenderAsync - firstRender = {firstRender}");

        // Aguarda os dados do SkuManager
        await SkuManager.CarregarDadosAsync();

        // Verifica se os dados estão prontos
        if (SkuManager.resultDTO != null && SkuManager.resultDTO.skuMarketplaceDTOs != null)
        {
            resultadosListaCorrente = SkuManager.resultDTO;

            Dictionary<string, double> ListaErros = resultadosListaCorrente.ObterErros();

            data = ListaErros.Values.ToArray();
            labels = ListaErros.Keys.ToArray();
        }

        // Força a re-renderização do componente
        StateHasChanged();
    }
}

}
